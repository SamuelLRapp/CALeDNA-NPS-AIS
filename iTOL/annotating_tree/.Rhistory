OTL_dataframe  <- read.csv(file = "input_iTOL/NPS_AIS_GENUS_taxon_names_according_to_OTL.txt")
CoverageMatrix_NCBI_genus_DF<- read.csv(file = "input_iTOL/CovM_NCBI_genus_NPS.csv")
View(CoverageMatrix_NCBI_genus_DF)
View(OTL_dataframe)
d<-CoverageMatrix_NCBI_genus_DF
d = ifelse(d$column < x, 100,)
x<- 100
d = ifelse(d$column < x, 100,)
d = ifelse(d < x, 100,)
d = ifelse(d < x, 100,)
d = ifelse(d < x, 100,1)
d$X18S = ifelse(d$X18S < x, 100,1)
d[,2]= ifelse(d[,2]< x, 100,1)
d<-CoverageMatrix_NCBI_genus_DF
d[,2]= ifelse(d[,2]< x, 100,1)
View(d)
d<-CoverageMatrix_NCBI_genus_DF
x<- 100
d[,2]= ifelse(d[,2]< x, 100,)
d[,2]= if(d[,2]< x, 100, d[,2])
d<-CoverageMatrix_NCBI_genus_DF
x<- 100
d[,2]= if(d[,2]< x, 100, d[,2])
d[,2]= if(d[,2]< x, 5, 5)
d[,2]= if(d[,2]< x, 5)
if()
d<-CoverageMatrix_NCBI_genus_DF
x<- 100
d[,2]= ifelse(d[,2]< x, 100,NA)
View(d)
d<-CoverageMatrix_NCBI_genus_DF
x<- 100
d[,2]= ifelse(d[,2]< x, 100,)
View(d)
set_max_value <- function(dataframe, max , replace)
{
c <- ncol(dataframe)
r <- nrow(dataframe)
for(i in 1:c)
{
for(i in 1:r)
{
if(dataframe[r,c] > max)
{
dataframe[r,c] == replace
}
}
}
}
set_max_value(d, 100, 100)
set_max_value <- function(dataframe, max , replace)
{
c <- ncol(dataframe)
r <- nrow(dataframe)
for(i in 1:c)
{
for(i in 1:10)#r
{
if(dataframe[r,c] > max)
{
dataframe[r,c] == replace
}
}
}
dataframe
}
set_max_value(d, 100, 100)
set_max_value <- function(dataframe, max , replace)
{
c <- ncol(dataframe)
r <- nrow(dataframe)
for(i in 1:c)
{
for(j in 1:10)#r
{
if(dataframe[j,i] > max)
{
dataframe[j,i] == replace
}
}
}
dataframe
}
set_max_value(d, 100, 100)
d[3,2]
d[3,2] < 100
set_max_value <- function(dataframe, max , replace) #replace all values above a max with another value
{
c <- ncol(dataframe)
r <- nrow(dataframe)
for(i in 1:c)
{
for(j in 1:10)#r
{
if(dataframe[j,i] > max)
{
dataframe[j,i] <- replace
}
}
}
dataframe
}
set_max_value(d, 100, 100)
set_max_value(d, 100, 100)
max_100_cell_DF <-set_max_value(OTL_w_underscores, 100, 100)
function1output <-Annotated_OTL_IDS(OTL_dataframe, CoverageMatrix_NCBI_genus_DF)
OTL_w_underscores<- add_underscores(function1output)
write.csv(OTL_w_underscores, file = "OTT_IDD_Annotated", row.names = FALSE)
set_max_value <- function(dataframe, max , replace) #replace all values above a max with another value
{
c <- ncol(dataframe)
r <- nrow(dataframe)
for(i in 1:c)
{
for(j in 1:10)#r
{
if(dataframe[j,i] > max)
{
dataframe[j,i] <- replace
}
}
}
dataframe
}
add_underscores <- function(ddata.frame) #takes OTL list and adds _ in betweeen spaces between name and ottid
{
for(i in 1:nrow(ddata.frame))
{
ddata.frame[i,1] <- trimws(ddata.frame[i,1], "r")
ddata.frame[i,1] <- gsub(" ", "_",  ddata.frame[i,1]) #change gsub to work with genu spp ott
}
ddata.frame
}
NUM_BWB_SPP_left_behind <- function(BWB_spp_DF,Annotated_OTL_DF)
{
output <- (nrow(BWB_spp_DF) - nrow(Annotated_OTL_DF))
output
}
Annotated_OTL_IDS <- function(OTL_df, BWB_df) #takes in OTL_df dataframe, BWB dataframe and outputs the BWB dataframe with OTL names
{
rows_to_remove <- c()
Output_DF <- BWB_df
for(i in 1:nrow(Output_DF))
{
needle <- Output_DF[i,1]
foundHaystack <- "FALSE"
for(j in 1:nrow(OTL_df))
{
haystack<-OTL_dataframe[j,1]
if(grepl(needle, haystack, fixed = TRUE) == T)
{
haystack <- trimws(haystack, "r")
Output_DF[i,1] <- haystack
foundHaystack <-"TRUE"
}
}
if(foundHaystack == "FALSE") #no OTL value found
{
rows_to_remove <- c(rows_to_remove, i)
}
}
Output_DF <- Output_DF[-rows_to_remove,]#delete rows where CovMatrixvalue wasn't replaced, ie haystack not found
#some of those values are due to
Output_DF
}
compare_firstC_in_DFs <- function(OTU_longerlist,ShorterList) #comparing first column of two dataframes (should besimilar) and outputting values that aren't in both
{
output <- c()
for(i in 1:nrow(OTU_longerlist))
{
found <- "FALSE"
value <-trimws(OTU_longerlist[i,1],"r") #trim whitespace that OTL nexus files create when imported into R
for(j in 1:nrow(ShorterList))
{
if(value == ShorterList[j,1])
{
found <- "TRUE" #there was a match in there!
}
}
if(found == "FALSE") #no match was found to 'value'
{
output <- c(output, value)
}
}
output
}
max_100_cell_DF <-set_max_value(OTL_w_underscores, 100, 100)
function1output <-Annotated_OTL_IDS(OTL_dataframe, CoverageMatrix_NCBI_genus_DF)
OTL_w_underscores<- add_underscores(function1output)
max_100_cell_DF <-set_max_value(OTL_w_underscores, 100, 100)
write.csv(max_100_cell_DF, file = "OTT_IDD_Annotated_max_100_cell", row.names = FALSE)
set_max_value <- function(dataframe, max , replace) #replace all values above a max with another value
{
c <- ncol(dataframe)
r <- nrow(dataframe)
for(i in 1:c)
{
for(j in 1:r)#r
{
if(dataframe[j,i] > max)
{
dataframe[j,i] <- replace
}
}
}
dataframe
}
max_100_cell_DF <-set_max_value(OTL_w_underscores, 100, 100)
write.csv(max_100_cell_DF, file = "OTT_IDD_Annotated_max_100_cell", row.names = FALSE)
set_max_value <- function(dataframe, max , replace) #replace all values above a max with another value
{
c <- ncol(dataframe)
r <- nrow(dataframe)
for(i in 1:c)
{
for(j in 1:r)#r
{
if(dataframe[j,i] > max)
{
dataframe[j,i] <- replace
}
}
print(i)
}
dataframe
}
max_100_cell_DF <-set_max_value(OTL_w_underscores, 100, 100)
max_100_cell_DF
write.csv(max_100_cell_DF, file = "OTT_IDD_Annotated_max_100_cell", row.names = FALSE)
set_max_value <- function(dataframe, max , replace) #replace all values above a max with another value
{
c <- ncol(dataframe)
r <- nrow(dataframe)
for(i in 2:c)
{
for(j in 1:r)#r
{
if(dataframe[j,i] > max)
{
dataframe[j,i] <- replace
}
}
print(i)
}
dataframe
}
max_100_cell_DF <-set_max_value(OTL_w_underscores, 100, 100)
max_100_cell_DF
write.csv(max_100_cell_DF, file = "OTT_IDD_Annotated_max_100_cell", row.names = FALSE)
OTT_IDD_Annotated_max_100_cell<- read.csv(file = "input_iTOL/OTT_IDD_Annotated_max_100_cell.csv")
View(OTT_IDD_Annotated_max_100_cell)
CoverageMatrix_NCBI_genus_DF
#combine multiple COI NCBI names into 1
colnms=c("X.CO1", "X.COX1", "X.COI")
CoverageMatrix_NCBI_genus_DF$Combined_COI<-rowSums(CoverageMatrix_NCBI_genus_DF[,colnms])
#removing columns that were combined
drops <- c("X.CO1", "X.COX1", "X.COI")
CoverageMatrix_NCBI_genus_DF<-CoverageMatrix_NCBI_genus_DF[ , !(names(CoverageMatrix_NCBI_genus_DF) %in% drops)]
View(CoverageMatrix_NCBI_genus_DF)
function1output <-Annotated_OTL_IDS(OTL_dataframe, CoverageMatrix_NCBI_genus_DF)
OTL_w_underscores<- add_underscores(function1output)
write.csv(OTL_w_underscores, file = "OTT_IDD_Annotated", row.names = FALSE)
max_100_cell_DF <-set_max_value(OTL_w_underscores, 100, 100)
write.csv(max_100_cell_DF, file = "OTT_IDD_Annotated_max_100_cell", row.names = FALSE)
